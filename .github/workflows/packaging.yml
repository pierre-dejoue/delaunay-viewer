name: packaging

on:
  # This workflow is manually triggered
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'Release'
        type: choice
        options:
        - Debug
        - Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu, macos, windows ]
        arch: [ x86_64, arm64 ]
        exclude:
          - os: ubuntu
            arch: arm64
          - os: windows
            arch: arm64

    runs-on: ${{ matrix.os }}-latest

    env:
      CMAKE_CONFIG_PROJECT: -DDELAUNAY_VIEWER_BUILD_POLY2TRI=ON -DDELAUNAY_VIEWER_BUILD_CDT=ON -DDELAUNAY_VIEWER_BUILD_TRIANGLE=ON -DDELAUNAY_VIEWER_BUILD_UTESTS=ON
      CMAKE_CONFIG_EXTRA: ${{ matrix.os == 'macos' && format('-DCMAKE_OSX_ARCHITECTURES={0}', matrix.arch) || '' }}

    steps:
    - uses: actions/checkout@v4

    - if: matrix.os == 'ubuntu'
      name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libwayland-dev libxkbcommon-dev xorg-dev libgl1-mesa-dev

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ inputs.build_type }} ${{ env.CMAKE_CONFIG_PROJECT }} ${{ env.CMAKE_CONFIG_EXTRA }}

    - name: Build
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --config ${{ inputs.build_type }}

    - name: Version
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --target delaunay_viewer_version --config ${{ inputs.build_type }}

    - name: Install
      working-directory: ${{ github.workspace }}/build
      run: cmake --install . --config ${{ inputs.build_type }} --prefix install

    - if: matrix.os == 'windows'
      name: Sign Windows executables with Trusted Signing
      uses: azure/trusted-signing-action@v0
      with:
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        endpoint: ${{ secrets.AZURE_ENDPOINT }}
        trusted-signing-account-name: ${{ secrets.AZURE_CODE_SIGNING_NAME }}
        certificate-profile-name: ${{ secrets.AZURE_CERT_PROFILE_NAME }}
        files-folder: ${{ github.workspace }}\build\install\bin
        files-folder-filter: exe
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256

    - if: matrix.os != 'windows'
      name: Tar files
      working-directory: ${{ github.workspace }}/build
      run: tar -cvf package.tar -C install .

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: package-${{ matrix.os }}-${{ matrix.arch }}-${{ inputs.build_type }}
        path: ${{ github.workspace }}/build/${{ matrix.os == 'windows' && 'install' || 'package.tar' }}
        retention-days: 6
